export PYTHONPATH := "."

lint-check:
    poetry run isort . --check-only --diff
    poetry run black --check --diff .

lint-fix:
    poetry run isort . && poetry run black .

test:
    poetry run pytest tests/ -v

docker-build:
    cd .. && docker build -t serving-$(git rev-parse --short HEAD) -t serving-latest -f serving/Dockerfile .

docker-build-lambda:
    cd .. && docker build --platform linux/arm64 \
        --build-arg GIT_SHA=$(git rev-parse HEAD) \
        -t serving-lambda-$(git rev-parse --short HEAD) \
        -t serving-lambda-latest \
        -f serving/Dockerfile.lambda .

serve:
    poetry run python app.py --reload

docker-serve:
    docker run -p 8000:8000 serving-latest 

docker-serve-lambda:
    docker run -p 9000:8080 serving-lambda-latest | jq

test-info-local:
    curl -X GET "http://localhost:8000/info"

test-redact-local:
    curl -X POST "http://localhost:8000/redact" \
    -H "Content-Type: application/json" \
    -d '{"text":"This is a test"}' 

test-info-lambda-local:
    curl -X POST "http://localhost:9000/2015-03-31/functions/function/invocations" -d @test_lambda_payloads/info.json | jq

test-redact-lambda-local:
    curl -X POST "http://localhost:9000/2015-03-31/functions/function/invocations" -d @test_lambda_payloads/redact.json | jq

test-info-lambda-remote:
    curl -X GET "https://w0onfo4wd5.execute-api.eu-west-1.amazonaws.com/prod/info" -d @test_lambda_payloads/info.json | jq

test-redact-lambda-remote:
    curl -X POST "https://w0onfo4wd5.execute-api.eu-west-1.amazonaws.com/prod/redact" -d @test_lambda_payloads/redact.json | jq